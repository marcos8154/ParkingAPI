// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingAPI.Storage.Impl;

namespace ParkingAPI.Storage.Migrations
{
    [DbContext(typeof(MySqlDatabase))]
    [Migration("20220404181027_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("ParkingAPI.Dominio.Cobranca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("char(50)");

                    b.Property<string>("CodigoCobranca")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)");

                    b.Property<Guid?>("EstadiaId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Pago")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PlacaId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("EstadiaId");

                    b.HasIndex("PlacaId");

                    b.ToTable("Cobrancas");
                });

            modelBuilder.Entity("ParkingAPI.Dominio.Estacionamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CNPJ")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("TempoEstadia")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorEstadia")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Estacionamentos");
                });

            modelBuilder.Entity("ParkingAPI.Dominio.Estadia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EstacionamentoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Observacao")
                        .HasColumnType("longtext");

                    b.Property<string>("PlacaId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TempoConsumo")
                        .HasColumnType("longtext");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstacionamentoId");

                    b.HasIndex("PlacaId");

                    b.ToTable("Estadias");
                });

            modelBuilder.Entity("ParkingAPI.Dominio.Placa", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DescricaoVeiculo")
                        .HasColumnType("longtext");

                    b.Property<bool>("PlacaPrioritaria")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ProprietarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProprietarioId");

                    b.ToTable("Placas");
                });

            modelBuilder.Entity("ParkingAPI.Dominio.Proprietario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Apelido")
                        .HasColumnType("longtext");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<string>("Celular")
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .HasColumnType("longtext");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext");

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .HasColumnType("longtext");

                    b.Property<string>("Municipio")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rg")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("UF")
                        .HasColumnType("longtext");

                    b.Property<int>("VagasContratadas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Proprietarios");
                });

            modelBuilder.Entity("ParkingAPI.Dominio.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ParkingAPI.Dominio.Cobranca", b =>
                {
                    b.HasOne("ParkingAPI.Dominio.Estadia", "Estadia")
                        .WithMany()
                        .HasForeignKey("EstadiaId");

                    b.HasOne("ParkingAPI.Dominio.Placa", "Placa")
                        .WithMany()
                        .HasForeignKey("PlacaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estadia");

                    b.Navigation("Placa");
                });

            modelBuilder.Entity("ParkingAPI.Dominio.Estadia", b =>
                {
                    b.HasOne("ParkingAPI.Dominio.Estacionamento", "Estacionamento")
                        .WithMany("Estadias")
                        .HasForeignKey("EstacionamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkingAPI.Dominio.Placa", "Placa")
                        .WithMany()
                        .HasForeignKey("PlacaId");

                    b.Navigation("Estacionamento");

                    b.Navigation("Placa");
                });

            modelBuilder.Entity("ParkingAPI.Dominio.Placa", b =>
                {
                    b.HasOne("ParkingAPI.Dominio.Proprietario", "Proprietario")
                        .WithMany("Placas")
                        .HasForeignKey("ProprietarioId");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("ParkingAPI.Dominio.Estacionamento", b =>
                {
                    b.Navigation("Estadias");
                });

            modelBuilder.Entity("ParkingAPI.Dominio.Proprietario", b =>
                {
                    b.Navigation("Placas");
                });
#pragma warning restore 612, 618
        }
    }
}
